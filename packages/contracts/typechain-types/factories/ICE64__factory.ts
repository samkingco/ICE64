/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ICE64, ICE64Interface } from "../ICE64";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "royalties",
        type: "address",
      },
      {
        internalType: "contract IERC721",
        name: "roots_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyOwnerOfEdition",
    type: "error",
  },
  {
    inputs: [],
    name: "EditionForOriginalStillReserved",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectEthAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidToken",
    type: "error",
  },
  {
    inputs: [],
    name: "NoMetadataYet",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwnerOfRootsPhoto",
    type: "error",
  },
  {
    inputs: [],
    name: "PaymentFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "RootsPhotoAlreadyUsedClaim",
    type: "error",
  },
  {
    inputs: [],
    name: "SoldOut",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "ICE64Emerges",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "rootsId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "originalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "editionId",
        type: "uint256",
      },
    ],
    name: "RootsClaim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "metadata",
        type: "address",
      },
    ],
    name: "SetMetadataAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rootsId",
        type: "uint256",
      },
    ],
    name: "claimEditionAsRootsHolder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getEditionTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getEditionsSold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMaxEditions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getOriginalSold",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "editionId",
        type: "uint256",
      },
    ],
    name: "getOriginalTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rootsId",
        type: "uint256",
      },
    ],
    name: "hasEditionBeenClaimedForRootsPhoto",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "isEdition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "metadata",
    outputs: [
      {
        internalType: "contract IICE64Renderer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceEdition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceOriginal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "purchaseEdition",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "purchaseOriginal",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "roots",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IICE64Renderer",
        name: "metadataAddr",
        type: "address",
      },
    ],
    name: "setMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setRoyaltyInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620020d0380380620020d083398101604081905262000034916200015f565b600280546001600160a01b0319166001600160a01b0385169081179091556040518491906000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a3506040517faa0fbc569a3ac1119963e93aa7ce60ec6703ac5382e6b588a2a2e617bed9e9ed90600090a1600480546001600160a01b0319166001600160a01b038316179055600554620000d7906000600162000120565b60055550604080518082019091526001600160a01b0391909116808252610280602090920191909152600780546001600160b81b031916909117600560a71b17905550620001b3565b600081156200013657506001821b83176200013f565b506001821b1983165b9392505050565b6001600160a01b03811681146200015c57600080fd5b50565b6000806000606084860312156200017557600080fd5b8351620001828162000146565b6020850151909350620001958162000146565b6040850151909250620001a88162000146565b809150509250925092565b611f0d80620001c36000396000f3fe6080604052600436106101cb5760003560e01c806369dabb7c116100f7578063a22cb46511610095578063e2e784d511610064578063e2e784d514610574578063e985e9c514610594578063f242432a146105cf578063f3cb8385146105ef57600080fd5b8063a22cb465146104f4578063afd77cb614610514578063dafa84f914610534578063df7624631461055457600080fd5b80638d345150116100d15780638d345150146104845780638da5cb5b146104a0578063955ce6ca146104c05780639effd22f146104d457600080fd5b806369dabb7c1461042857806388899eaa14610449578063894760691461046457600080fd5b80632eb2c2d61161016f5780634e1273f41161013e5780634e1273f41461039457806358e83e5b146103c15780635fd8c710146103e15780636664938b146103f657600080fd5b80632eb2c2d6146102fc578063392f37e91461031c578063393fe1cd1461035457806342966c681461037457600080fd5b80630e89341c116101ab5780630e89341c1461025d57806313af40351461028a578063283ea676146102aa5780632a55205a146102bd57600080fd5b80629a19ba146101d0578062fdd58e146101e557806301ffc9a71461022d575b600080fd5b6101e36101de366004611728565b61060f565b005b3480156101f157600080fd5b5061021a610200366004611756565b600060208181529281526040808220909352908152205481565b6040519081526020015b60405180910390f35b34801561023957600080fd5b5061024d610248366004611798565b61073e565b6040519015158152602001610224565b34801561026957600080fd5b5061027d610278366004611728565b610769565b604051610224919061180d565b34801561029657600080fd5b506101e36102a5366004611820565b610806565b6101e36102b8366004611728565b610885565b3480156102c957600080fd5b506102dd6102d836600461183d565b6108e7565b604080516001600160a01b039093168352602083019190915201610224565b34801561030857600080fd5b506101e36103173660046118ed565b610925565b34801561032857600080fd5b5060035461033c906001600160a01b031681565b6040516001600160a01b039091168152602001610224565b34801561036057600080fd5b5060045461033c906001600160a01b031681565b34801561038057600080fd5b506101e361038f366004611728565b610bc8565b3480156103a057600080fd5b506103b46103af3660046119ac565b610c0f565b6040516102249190611a18565b3480156103cd57600080fd5b5061021a6103dc366004611728565b610d44565b3480156103ed57600080fd5b506101e3610d51565b34801561040257600080fd5b5061024d610411366004611728565b60009081526006602052604090205460ff16151590565b34801561043457600080fd5b5061024d610443366004611728565b60641090565b34801561045557600080fd5b5061021a668e1bc9bf04000081565b34801561047057600080fd5b506101e361047f366004611820565b610dc5565b34801561049057600080fd5b5061021a670470de4df820000081565b3480156104ac57600080fd5b5060025461033c906001600160a01b031681565b3480156104cc57600080fd5b50602061021a565b3480156104e057600080fd5b5061021a6104ef366004611728565b610eaf565b34801561050057600080fd5b506101e361050f366004611a6a565b610ebc565b34801561052057600080fd5b506101e361052f36600461183d565b610f28565b34801561054057600080fd5b5061021a61054f366004611728565b61106e565b34801561056057600080fd5b5061024d61056f366004611728565b61109b565b34801561058057600080fd5b506101e361058f366004611756565b6110ae565b3480156105a057600080fd5b5061024d6105af366004611aa3565b600160209081526000928352604080842090915290825290205460ff1681565b3480156105db57600080fd5b506101e36105ea366004611ad1565b611122565b3480156105fb57600080fd5b506101e361060a366004611820565b61131c565b8080158061061d5750601081115b1561063b5760405163c1ab6dc160e01b815260040160405180910390fd5b670470de4df820000080341461066457604051638b6ebb4d60e01b815260040160405180910390fd5b60008381526006602052604090205460ff168015610695576040516352df9fe560e01b815260040160405180910390fd5b60006106a085610d44565b33600090815260208181526040808320848452909152902054909150156106f1576106dd3386600160405180602001604052806000815250611390565b6106ec856001600060016114d8565b610737565b61070d3386600160405180602001604052806000815250611390565b6107293382600160405180602001604052806000815250611390565b6107378560018060016114d8565b5050505050565b600063152a902d60e11b6001600160e01b031983161480610763575061076382611528565b92915050565b6003546060906001600160a01b031661079557604051635e87bc0f60e11b815260040160405180910390fd5b60035460405163c87b56dd60e01b8152600481018490526001600160a01b039091169063c87b56dd90602401600060405180830381865afa1580156107de573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107639190810190611b63565b6002546001600160a01b031633146108395760405162461bcd60e51b815260040161083090611c10565b60405180910390fd5b600280546001600160a01b0319166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b808015806108935750601081115b156108b15760405163c1ab6dc160e01b815260040160405180910390fd5b668e1bc9bf0400008034146108d957604051638b6ebb4d60e01b815260040160405180910390fd5b6108e283611576565b505050565b6007546001600160a01b038116906000906127109061091290600160a01b900462ffffff1685611c4c565b61091c9190611c6b565b90509250929050565b8483146109665760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606401610830565b336001600160a01b03891614806109a057506001600160a01b038816600090815260016020908152604080832033845290915290205460ff165b6109dd5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610830565b60008060005b87811015610a98578888828181106109fd576109fd611c8d565b905060200201359250868682818110610a1857610a18611c8d565b6001600160a01b038e1660009081526020818152604080832089845282528220805493909102949094013595508593925090610a55908490611ca3565b90915550506001600160a01b038a1660009081526020818152604080832086845290915281208054849290610a8b908490611cba565b90915550506001016109e3565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b604051610aec9493929190611d08565b60405180910390a46001600160a01b0389163b15610b935760405163bc197c8160e01b808252906001600160a01b038b169063bc197c8190610b409033908f908e908e908e908e908e908e90600401611d58565b6020604051808303816000875af1158015610b5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b839190611dbc565b6001600160e01b03191614610ba0565b6001600160a01b03891615155b610bbc5760405162461bcd60e51b815260040161083090611dd9565b50505050505050505050565b336000908152602081815260408083208484529091528120549003610c00576040516330cd747160e01b815260040160405180910390fd5b610c0c3382600161165f565b50565b6060838214610c525760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606401610830565b8367ffffffffffffffff811115610c6b57610c6b611b4d565b604051908082528060200260200182016040528015610c94578160200160208202803683370190505b50905060005b84811015610d3b57600080878784818110610cb757610cb7611c8d565b9050602002016020810190610ccc9190611820565b6001600160a01b03166001600160a01b031681526020019081526020016000206000858584818110610d0057610d00611c8d565b90506020020135815260200190815260200160002054828281518110610d2857610d28611c8d565b6020908102919091010152600101610c9a565b50949350505050565b6000610763606483611cba565b6002546040516000916001600160a01b03169047908381818185875af1925050503d8060008114610d9e576040519150601f19603f3d011682016040523d82523d6000602084013e610da3565b606091505b5050905080610c0c576040516307a4ced160e51b815260040160405180910390fd5b6002546040516370a0823160e01b81523060048201526001600160a01b038381169263a9059cbb9291169083906370a0823190602401602060405180830381865afa158015610e18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3c9190611e03565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610e87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eab9190611e1c565b5050565b6000610763606483611ca3565b3360008181526001602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b81801580610f365750601081115b15610f545760405163c1ab6dc160e01b815260040160405180910390fd5b600480546040516331a9108f60e11b815291820184905233916001600160a01b0390911690636352211e90602401602060405180830381865afa158015610f9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc39190611e39565b6001600160a01b031614610fea5760405163b24444db60e01b815260040160405180910390fd5b600554821c60019081160361101257604051632a06c23360e21b815260040160405180910390fd5b61101b83611576565b6110296005548360016116e3565b60055582827faefee21f072776246ecb4c85a2c7d4cbf33da6b7c97c03027a6fa57eb64fd90861105883610d44565b60405190815260200160405180910390a3505050565b600081815260066020526040812054819060ff80821691600881901c82169160109190911c161515610d3b565b600554600090821c600190811614610763565b6002546001600160a01b031633146110d85760405162461bcd60e51b815260040161083090611c10565b604080518082019091526001600160a01b0390921680835262ffffff909116602090920182905260078054600160a01b9093026001600160b81b0319909316909117919091179055565b336001600160a01b038716148061115c57506001600160a01b038616600090815260016020908152604080832033845290915290205460ff165b6111995760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610830565b6001600160a01b038616600090815260208181526040808320878452909152812080548592906111ca908490611ca3565b90915550506001600160a01b03851660009081526020818152604080832087845290915281208054859290611200908490611cba565b909155505060408051858152602081018590526001600160a01b03808816929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0385163b156112eb5760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e61906112989033908b908a908a908a908a90600401611e56565b6020604051808303816000875af11580156112b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112db9190611dbc565b6001600160e01b031916146112f8565b6001600160a01b03851615155b6113145760405162461bcd60e51b815260040161083090611dd9565b505050505050565b6002546001600160a01b031633146113465760405162461bcd60e51b815260040161083090611c10565b600380546001600160a01b0319166001600160a01b0383169081179091556040517fab9629867a34a7ca2d5922872561019a3ba83fe9e98bc2c74ff6ffdfd80d265690600090a250565b6001600160a01b038416600090815260208181526040808320868452909152812080548492906113c1908490611cba565b909155505060408051848152602081018490526001600160a01b0386169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0384163b156114a95760405163f23a6e6160e01b808252906001600160a01b0386169063f23a6e6190611456903390600090899089908990600401611e9d565b6020604051808303816000875af1158015611475573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114999190611dbc565b6001600160e01b031916146114b6565b6001600160a01b03841615155b6114d25760405162461bcd60e51b815260040161083090611dd9565b50505050565b60008481526006602052604090205460ff8082169160081c1661150e6114fe8684611cba565b6115088684611cba565b85611707565b600096875260066020526040909620959095555050505050565b60006301ffc9a760e01b6001600160e01b0319831614806115595750636cdb3d1360e11b6001600160e01b03198316145b806107635750506001600160e01b0319166303a24d0760e21b1490565b600061158182610d44565b60008381526006602052604081205491925060ff600883901c81169260101c16151590816115ba576115b560016020611ca3565b6115bd565b60205b90508083036115fe5781156115e5576040516352df9fe560e01b815260040160405180910390fd5b60405163bc66069360e01b815260040160405180910390fd5b33600090815260208181526040808320878452909152902054156116355760405163b7d406bb60e01b815260040160405180910390fd5b6116513385600160405180602001604052806000815250611390565b6107378560006001856114d8565b6001600160a01b03831660009081526020818152604080832085845290915281208054839290611690908490611ca3565b909155505060408051838152602081018390526000916001600160a01b0386169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050565b600081156116f757506001821b8317611700565b506001821b1983165b9392505050565b600882901b8317816117195780611720565b8062010000175b949350505050565b60006020828403121561173a57600080fd5b5035919050565b6001600160a01b0381168114610c0c57600080fd5b6000806040838503121561176957600080fd5b823561177481611741565b946020939093013593505050565b6001600160e01b031981168114610c0c57600080fd5b6000602082840312156117aa57600080fd5b813561170081611782565b60005b838110156117d05781810151838201526020016117b8565b838111156114d25750506000910152565b600081518084526117f98160208601602086016117b5565b601f01601f19169290920160200192915050565b60208152600061170060208301846117e1565b60006020828403121561183257600080fd5b813561170081611741565b6000806040838503121561185057600080fd5b50508035926020909101359150565b60008083601f84011261187157600080fd5b50813567ffffffffffffffff81111561188957600080fd5b6020830191508360208260051b85010111156118a457600080fd5b9250929050565b60008083601f8401126118bd57600080fd5b50813567ffffffffffffffff8111156118d557600080fd5b6020830191508360208285010111156118a457600080fd5b60008060008060008060008060a0898b03121561190957600080fd5b883561191481611741565b9750602089013561192481611741565b9650604089013567ffffffffffffffff8082111561194157600080fd5b61194d8c838d0161185f565b909850965060608b013591508082111561196657600080fd5b6119728c838d0161185f565b909650945060808b013591508082111561198b57600080fd5b506119988b828c016118ab565b999c989b5096995094979396929594505050565b600080600080604085870312156119c257600080fd5b843567ffffffffffffffff808211156119da57600080fd5b6119e68883890161185f565b909650945060208701359150808211156119ff57600080fd5b50611a0c8782880161185f565b95989497509550505050565b6020808252825182820181905260009190848201906040850190845b81811015611a5057835183529284019291840191600101611a34565b50909695505050505050565b8015158114610c0c57600080fd5b60008060408385031215611a7d57600080fd5b8235611a8881611741565b91506020830135611a9881611a5c565b809150509250929050565b60008060408385031215611ab657600080fd5b8235611ac181611741565b91506020830135611a9881611741565b60008060008060008060a08789031215611aea57600080fd5b8635611af581611741565b95506020870135611b0581611741565b94506040870135935060608701359250608087013567ffffffffffffffff811115611b2f57600080fd5b611b3b89828a016118ab565b979a9699509497509295939492505050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215611b7557600080fd5b815167ffffffffffffffff80821115611b8d57600080fd5b818401915084601f830112611ba157600080fd5b815181811115611bb357611bb3611b4d565b604051601f8201601f19908116603f01168101908382118183101715611bdb57611bdb611b4d565b81604052828152876020848701011115611bf457600080fd5b611c058360208301602088016117b5565b979650505050505050565b6020808252600c908201526b15539055551213d49256915160a21b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615611c6657611c66611c36565b500290565b600082611c8857634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600082821015611cb557611cb5611c36565b500390565b60008219821115611ccd57611ccd611c36565b500190565b81835260006001600160fb1b03831115611ceb57600080fd5b8260051b8083602087013760009401602001938452509192915050565b604081526000611d1c604083018688611cd2565b8281036020840152611c05818587611cd2565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b0389811682528816602082015260a060408201819052600090611d85908301888a611cd2565b8281036060840152611d98818789611cd2565b90508281036080840152611dad818587611d2f565b9b9a5050505050505050505050565b600060208284031215611dce57600080fd5b815161170081611782565b60208082526010908201526f155394d0519157d49150d2541251539560821b604082015260600190565b600060208284031215611e1557600080fd5b5051919050565b600060208284031215611e2e57600080fd5b815161170081611a5c565b600060208284031215611e4b57600080fd5b815161170081611741565b6001600160a01b03878116825286166020820152604081018590526060810184905260a060808201819052600090611e919083018486611d2f565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611c05908301846117e156fea2646970667358221220ef752602c1f752fb87adf827b60737ccb882d5227026dcafcd7206537ed3e58264736f6c634300080e0033";

type ICE64ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ICE64ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ICE64__factory extends ContractFactory {
  constructor(...args: ICE64ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    owner: string,
    royalties: string,
    roots_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ICE64> {
    return super.deploy(
      owner,
      royalties,
      roots_,
      overrides || {}
    ) as Promise<ICE64>;
  }
  getDeployTransaction(
    owner: string,
    royalties: string,
    roots_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      owner,
      royalties,
      roots_,
      overrides || {}
    );
  }
  attach(address: string): ICE64 {
    return super.attach(address) as ICE64;
  }
  connect(signer: Signer): ICE64__factory {
    return super.connect(signer) as ICE64__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ICE64Interface {
    return new utils.Interface(_abi) as ICE64Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ICE64 {
    return new Contract(address, _abi, signerOrProvider) as ICE64;
  }
}
